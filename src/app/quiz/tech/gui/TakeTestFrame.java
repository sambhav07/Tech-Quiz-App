/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app.quiz.tech.gui;

import app.quiz.tech.dao.PerformanceDAO;
import app.quiz.tech.dao.QuestionDAO;
import app.quiz.tech.pojo.Answer;
import app.quiz.tech.pojo.AnswerStore;
import app.quiz.tech.pojo.Exam;
import app.quiz.tech.pojo.Performance;
import app.quiz.tech.pojo.Question;
import app.quiz.tech.pojo.QuestionStore;
import app.quiz.tech.pojo.UserProfile;
import java.awt.Color;
import java.awt.Font;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author sambhavj
 */

public class TakeTestFrame extends javax.swing.JFrame {

    /**
     * Creates new form TakeTestFrame
     */
    class TimeThread implements Runnable
    {
        public Thread th;
        private boolean exit;

        public Thread getTh() {
            return th;
        }
        public TimeThread()
        {
            th=new Thread(this);
            th.setName("Timer thread");
            exit=false;
            th.start();
        }
        @Override
        public void run() {
            int totalTime=qstore.getCount();
            StringBuffer str=new StringBuffer("Total Time: "+totalTime+" min");
            timeLabel.setText(str.toString());
            int min=0;
            int sec=0;
            jLabel1.setText("Time Taken: "+min+":0"+sec);
            try
            {
                while(min<totalTime && exit==false)
                {
                    sec=sec+1;
                    if(sec==60)
                    {
                        min=min+1;
                        sec=0;
                    }
                    System.out.println("Time Taken: "+min+":"+sec);
                    if(sec<10)
                    {
                        jLabel1.setText("Time Taken: "+min+":0"+sec);
                    }else
                    {
                        jLabel1.setText("Time Taken: "+min+":"+sec);
                    }
                    Thread.sleep(1000);
                }
                if(min==totalTime)
                {
                    JOptionPane.showMessageDialog(null, "Time's Up! Click Done to submit the exam", "Time Over!", JOptionPane.INFORMATION_MESSAGE);
                    btnPrevious.setEnabled(false);
                    btnNext.setEnabled(false);
                    btnClear.setEnabled(false);
                    rbtnOption1.setEnabled(false);
                    rbtnOption2.setEnabled(false);
                    rbtnOption3.setEnabled(false);
                    rbtnOption4.setEnabled(false);
                }
            }catch(InterruptedException ex)
            {
                JOptionPane.showMessageDialog(null, "Timer Interrupted Error!", "Error!", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        }
        public void stop()
        {
            exit=true;
        }
    }
    private Color oldColor;
    private Font oldFont;
    private Exam exam;
    private QuestionStore qstore;
    private AnswerStore astore;
    private int pos=0;
    private int qno;
    private TimeThread tth;
    public TakeTestFrame() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("THE TECH QUIZ APP");
        unameLabel.setText("Hello "+(UserProfile.getUserName().toUpperCase().charAt(0)+UserProfile.getUserName().substring(1)));
        oldColor=logoutLabel.getForeground();
        oldFont=logoutLabel.getFont();
        qstore=new QuestionStore();
        astore=new AnswerStore();
        System.out.println(astore);
        qno=1;
        qnoLabel.setText("Question No: "+qno);
    }
    
    public TakeTestFrame(Exam takeExam)
    {
        this();
        this.exam=takeExam;
        paperLabel.setText(exam.getLanguage().toUpperCase()+" PAPER");
        loadQuestions();
        showQuestion();
        System.out.println("After showQuestion");
        quesTextArea.setEditable(false);
        timeLabel.setText("");
        tth=new TimeThread();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        unameLabel = new javax.swing.JLabel();
        logoutLabel = new javax.swing.JLabel();
        paperLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        quesTextArea = new javax.swing.JTextArea();
        qnoLabel = new javax.swing.JLabel();
        rbtnOption1 = new javax.swing.JRadioButton();
        rbtnOption2 = new javax.swing.JRadioButton();
        rbtnOption3 = new javax.swing.JRadioButton();
        rbtnOption4 = new javax.swing.JRadioButton();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnDone = new javax.swing.JButton();
        timeLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        unameLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        unameLabel.setForeground(new java.awt.Color(255, 153, 0));
        unameLabel.setText("Hello");

        logoutLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        logoutLabel.setForeground(new java.awt.Color(255, 153, 0));
        logoutLabel.setText("Logout");
        logoutLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoutLabelMouseExited(evt);
            }
        });

        paperLabel.setFont(new java.awt.Font("Tahoma", 1, 28)); // NOI18N
        paperLabel.setForeground(new java.awt.Color(255, 153, 0));
        paperLabel.setText("JAVA PAPER");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/quiz/tech/gui/images/good luck223.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");

        quesTextArea.setColumns(20);
        quesTextArea.setRows(5);
        jScrollPane1.setViewportView(quesTextArea);

        qnoLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        qnoLabel.setForeground(new java.awt.Color(255, 153, 0));
        qnoLabel.setText("Question No :");

        rbtnOption1.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(rbtnOption1);
        rbtnOption1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        rbtnOption1.setForeground(new java.awt.Color(255, 153, 0));
        rbtnOption1.setText("Option 1");

        rbtnOption2.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(rbtnOption2);
        rbtnOption2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        rbtnOption2.setForeground(new java.awt.Color(255, 153, 0));
        rbtnOption2.setText("Option 2");

        rbtnOption3.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(rbtnOption3);
        rbtnOption3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        rbtnOption3.setForeground(new java.awt.Color(255, 153, 0));
        rbtnOption3.setText("Option 3");

        rbtnOption4.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(rbtnOption4);
        rbtnOption4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        rbtnOption4.setForeground(new java.awt.Color(255, 153, 0));
        rbtnOption4.setText("Option 4");

        btnNext.setBackground(new java.awt.Color(0, 0, 0));
        btnNext.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnNext.setForeground(new java.awt.Color(255, 153, 0));
        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrevious.setBackground(new java.awt.Color(0, 0, 0));
        btnPrevious.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnPrevious.setForeground(new java.awt.Color(255, 153, 0));
        btnPrevious.setText("Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        btnDone.setBackground(new java.awt.Color(0, 0, 0));
        btnDone.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnDone.setForeground(new java.awt.Color(255, 153, 0));
        btnDone.setText("Done");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });

        timeLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        timeLabel.setForeground(new java.awt.Color(255, 153, 0));
        timeLabel.setText("Total Time: 3 min");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 0));
        jLabel1.setText("Time Taken: 0:0");

        btnClear.setBackground(new java.awt.Color(0, 0, 0));
        btnClear.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 153, 0));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(qnoLabel)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(209, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnPrevious, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(rbtnOption1, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                                .addComponent(rbtnOption3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(btnDone, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(136, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbtnOption4, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rbtnOption2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(84, 84, 84))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(642, 642, 642))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(unameLabel)
                .addGap(251, 251, 251)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paperLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(logoutLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(paperLabel)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(qnoLabel))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbtnOption1)
                            .addComponent(rbtnOption2))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbtnOption3)
                            .addComponent(rbtnOption4))
                        .addGap(65, 65, 65)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNext)
                            .addComponent(btnPrevious)
                            .addComponent(btnDone)
                            .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(unameLabel)
                            .addComponent(logoutLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(49, 49, 49))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutLabelMouseClicked
        // TODO add your handling code here:
        LoginFrame lf=new LoginFrame();
        lf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutLabelMouseClicked

    private void logoutLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutLabelMouseEntered
        // TODO add your handling code here:
        Font f=new Font("Tahoma",Font.ITALIC,16);
        logoutLabel.setFont(f);
        logoutLabel.setForeground(Color.WHITE);
    }//GEN-LAST:event_logoutLabelMouseEntered

    private void logoutLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutLabelMouseExited
        // TODO add your handling code here:
        logoutLabel.setForeground(oldColor);
        logoutLabel.setFont(oldFont);
    }//GEN-LAST:event_logoutLabelMouseExited

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        String chosenAnswer=getUserAnswer();
        if(chosenAnswer!=null)
        {
            Question ques=qstore.getQuestionByQno(qno);
            String correctAnswer=ques.getCorrectAnswer();
            Answer newAnswer=new Answer(exam.getExamId(),exam.getLanguage(),qno,chosenAnswer,correctAnswer);
            System.out.println(newAnswer);
            Answer answer=astore.getAnswerByQuestionNo(qno);
            if(answer==null)
            {
                astore.addAnswer(newAnswer);
            }else
            {
                if(!(newAnswer.getChosenAnswer().equals(answer.getChosenAnswer())))
                {
                    astore.setAnswerAt(pos, newAnswer);
                }
            }
        }
        pos++;
        if(pos>=qstore.getCount())
        {
            pos=0;
        }
        qno++;
        if(qno>qstore.getCount())
        {
            qno=1;
        }
        qnoLabel.setText("Question No: "+qno);
        showQuestion();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        // TODO add your handling code here:
        
        String chosenAnswer=getUserAnswer();
        if(chosenAnswer!=null)
        {
            Question ques=qstore.getQuestionByQno(qno);
            Answer newAnswer=new Answer(exam.getExamId(),exam.getLanguage(),qno,chosenAnswer,ques.getCorrectAnswer());
            System.out.println(newAnswer);
            Answer oldAnswer=astore.getAnswerByQuestionNo(qno);
            if(oldAnswer==null)
            {
                astore.addAnswer(newAnswer);
            }
            else
            {
                 if(!(newAnswer.getChosenAnswer().equals(oldAnswer.getChosenAnswer())))
                 {
                     astore.setAnswerAt(pos, newAnswer);
                 }
            }
           
        }
        pos--;
        if(pos<0)
        {
            pos=qstore.getCount()-1;
        }
        qno--;
        if(qno<1)
        {
            qno=qstore.getCount();
        }
        showQuestion();
        qnoLabel.setText("Question No: "+qno);
        
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
        // TODO add your handling code here:
        int response=JOptionPane.showConfirmDialog(null, "Are you sure?", "Confirm!", JOptionPane.YES_NO_OPTION);
        if(response==JOptionPane.YES_OPTION)
        {
            tth.stop();
            System.out.println("Inside if"+response);
            String chosenAnswer=getUserAnswer();
            if(chosenAnswer!=null)
            {
                System.out.println("Inside if"+chosenAnswer);
                Question ques=qstore.getQuestionByQno(qno);
                Answer newAnswer=new Answer(exam.getExamId(),exam.getLanguage(),qno,chosenAnswer,ques.getCorrectAnswer());
                System.out.println(newAnswer);
                Answer oldAnswer=astore.getAnswerByQuestionNo(qno);
                if(oldAnswer==null)
                {
                    astore.addAnswer(newAnswer);
                }
                else
                {
                    if(!(newAnswer.getChosenAnswer().equals(oldAnswer.getChosenAnswer())))
                    {
                        astore.addAnswer(newAnswer);
                    }
                }
            }   
            int right=0,wrong=0;
            for(Question question:qstore.getAllQuestions())
            {
                int qno=question.getQno();
                Answer ans=astore.getAnswerByQuestionNo(qno);
                if(ans==null)
                {
                    continue;
                }else
                {
                    String chosenAnswer1=ans.getChosenAnswer();
                    String correctAnswer=ans.getCorrectAnswer();
                    if(chosenAnswer1.equals(correctAnswer))
                    {
                        right=right+1;
                    }
                    else
                    {
                        wrong=wrong+1;
                    }
                }
            }
            String reportCard="Total Questions:"+qstore.getCount();
            reportCard=reportCard+"\nRight Answers : "+right;
            reportCard+="\nWrong Answers : "+wrong;
            reportCard+="\nUnattempted : "+(qstore.getCount()-(right+wrong));
            JOptionPane.showMessageDialog(null,reportCard,"Your Result!", JOptionPane.INFORMATION_MESSAGE);
            try{
                Performance performance=new Performance(exam.getExamId(),exam.getLanguage(),UserProfile.getUserName(),right,wrong,qstore.getCount()-(right+wrong),(double)right/qstore.getCount()*100);
                PerformanceDAO.addPerformance(performance);
                JOptionPane.showMessageDialog(null, "Your performance has been successfully added to the database", "Performance Added!", JOptionPane.INFORMATION_MESSAGE);
                 PaperSelectionFrame psf=new PaperSelectionFrame();
                 psf.setVisible(true); 
                 this.dispose();   
            }catch(SQLException ex)
            {
                JOptionPane.showMessageDialog(null, "Performance DB Error", "Error!", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        
        }
        
    }//GEN-LAST:event_btnDoneActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here
        buttonGroup1.clearSelection();
    }//GEN-LAST:event_btnClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TakeTestFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDone;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel logoutLabel;
    private javax.swing.JLabel paperLabel;
    private javax.swing.JLabel qnoLabel;
    private javax.swing.JTextArea quesTextArea;
    private javax.swing.JRadioButton rbtnOption1;
    private javax.swing.JRadioButton rbtnOption2;
    private javax.swing.JRadioButton rbtnOption3;
    private javax.swing.JRadioButton rbtnOption4;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JLabel unameLabel;
    // End of variables declaration//GEN-END:variables

    private void loadQuestions() {
       try{
           List<Question> questionList=QuestionDAO.getQuestionsByExamId(exam.getExamId());
           for(Question q:questionList)
           {
               qstore.addQuestion(q);
           }
           System.out.println(qstore);
       }catch(SQLException ex)
       {
           JOptionPane.showMessageDialog(null, "Load Question DB Error!", "Error!", JOptionPane.ERROR_MESSAGE);
           ex.printStackTrace();
       }
    }

    private void showQuestion() {
      Question q=qstore.getQuestion(pos);
      System.out.println(q);
      buttonGroup1.clearSelection();
      System.out.println(1);
      quesTextArea.setText(q.getQuestion().trim());
      System.out.println(2);
      rbtnOption1.setText(q.getAnswer1().trim());
      System.out.println(3);
      rbtnOption2.setText(q.getAnswer2().trim());
      System.out.println(4);
      rbtnOption3.setText(q.getAnswer3().trim());
      System.out.println(5);
      rbtnOption4.setText(q.getAnswer4().trim());
      System.out.println(astore);
      System.out.println(pos);
      Answer answer=astore.getAnswerByQuestionNo(qno);
      System.out.println(answer);
      if(answer==null)
      {
          return;
      }
      String chosenAnswer=answer.getChosenAnswer();
      switch(chosenAnswer)
      {
          case "Answer1":
              rbtnOption1.setSelected(true);
              break;
          case "Answer2":
              rbtnOption2.setSelected(true);
              break;
          case "Answer3":
              rbtnOption3.setSelected(true);
              break;
          case "Answer4":
              rbtnOption4.setSelected(true);
              break;
      }
      
    }

    private String getUserAnswer() {
        if(rbtnOption1.isSelected())
        {
            return "Answer1";
        }
        else if(rbtnOption2.isSelected())
        {
            return "Answer2";
        }
        else if(rbtnOption3.isSelected())
        {
            return "Answer3";
        }
        else if(rbtnOption4.isSelected())
        {
            return "Answer4";
        }
        else
        {
            return null;
        }
    }
}
